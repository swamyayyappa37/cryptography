1.
def gcdExtended(a, b, x, y): 
    if a == 0 :  
        x = 0
        y = 1
        return b 
    x1 = 1
    y1 = 1
    gcd = gcdExtended(b%a, a, x1, y1) 
    x = y1 - (b/a) * x1 
    y = x1 
    return gcd 
x = 1
y = 1
a = 35
b = 15
g = gcdExtended(a, b, x, y) 
print("gcd(", a , "," , b, ") = ", g)


2.
from math import gcd 
def countPrimitiveRoots(p): 
    result = 1
    for i in range(2, p, 1): 
        if (gcd(i, p) == 1): 
            result += 1
    return result  
if __name__ == '__main__': 
    p = 5
    print(countPrimitiveRoots(p - 1)) 
